{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport custom_axios from '../plugins/axios.js';\nimport AbmAula from './AbmAula.vue';\nexport default {\n  components: {\n    AbmAula\n  },\n  data() {\n    return {\n      headers: [{\n        text: 'Id',\n        value: 'id'\n      }, {\n        text: 'Descripcion',\n        value: 'descripcion'\n      }, {\n        text: 'Ubicacion',\n        value: 'ubicacion'\n      }, {\n        text: 'Cant_proyectores',\n        value: 'cant_proyector'\n      }, {\n        text: 'Es_climatizada',\n        value: 'es_climatizada'\n      }, {\n        text: 'Aforo',\n        value: 'aforo'\n      }, {\n        text: 'Acciones',\n        value: 'actions',\n        sortable: false\n      }],\n      listadoAula: [],\n      mostrarAbmAula: false,\n      mostrarConfirmacion: false,\n      aulaSeleccionada: {},\n      aulaAEliminar: null,\n      editar: false,\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'info'\n      }\n    };\n  },\n  methods: {\n    todasLasAula() {\n      custom_axios.get('/apiv1/aula').then(response => {\n        if (response.status === 200) {\n          this.listadoAula = response.data.map(aula => ({\n            ...aula,\n            es_climatizada: aula.es_climatizada ? 'Sí' : 'No'\n          }));\n        }\n      }).catch(error => {\n        console.error('Error al obtener las aulas:', error);\n        this.mostrarSnackbar('Error al cargar las aulas', 'error');\n      });\n    },\n    abrirAbmAula() {\n      this.aulaSeleccionada = {};\n      this.editar = false;\n      this.mostrarAbmAula = true;\n    },\n    navigateToHome() {\n      this.$router.push('/').catch(err => {\n        if (err.name !== 'NavigationDuplicated') {\n          console.error(err);\n        }\n      });\n    },\n    editarAula(item) {\n      this.aulaSeleccionada = {\n        ...item\n      };\n      this.editar = true;\n      this.mostrarAbmAula = true;\n    },\n    confirmarEliminarAula(item) {\n      this.aulaAEliminar = item;\n      this.mostrarConfirmacion = true;\n    },\n    eliminarAulaConfirmada() {\n      custom_axios.delete(`/apiv1/aula/${this.aulaAEliminar.id}`).then(response => {\n        if (response.status === 204) {\n          this.mostrarSnackbar('Aula eliminada con éxito', 'success');\n          this.todasLasAula();\n          this.mostrarConfirmacion = false;\n        }\n      }).catch(error => {\n        console.error('Error al eliminar el aula:', error);\n        this.mostrarSnackbar('Error al eliminar el aula', 'error');\n      });\n    },\n    guardarAbmAula({\n      aula,\n      esNueva\n    }) {\n      this.mostrarAbmAula = false;\n      if (esNueva) {\n        this.listadoAula.push(aula);\n        this.mostrarSnackbar('Aula creada con éxito', 'success');\n      } else {\n        const index = this.listadoAula.findIndex(a => a.id === aula.id);\n        if (index !== -1) {\n          this.$set(this.listadoAula, index, aula);\n        }\n        this.mostrarSnackbar('Aula actualizada con éxito', 'success');\n      }\n      this.$nextTick(() => {\n        this.todasLasAula();\n      });\n    },\n    cancelarAbmAula() {\n      this.mostrarAbmAula = false;\n      this.aulaSeleccionada = {};\n      this.editar = false;\n    },\n    manejarError(mensaje) {\n      console.error(mensaje);\n      this.mostrarSnackbar(mensaje, 'error');\n    },\n    mostrarSnackbar(texto, color = 'info') {\n      this.snackbar.text = texto;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    }\n  },\n  mounted() {\n    this.todasLasAula();\n  }\n};","map":{"version":3,"names":["custom_axios","AbmAula","components","data","headers","text","value","sortable","listadoAula","mostrarAbmAula","mostrarConfirmacion","aulaSeleccionada","aulaAEliminar","editar","snackbar","show","color","methods","todasLasAula","get","then","response","status","map","aula","es_climatizada","catch","error","console","mostrarSnackbar","abrirAbmAula","navigateToHome","$router","push","err","name","editarAula","item","confirmarEliminarAula","eliminarAulaConfirmada","delete","id","guardarAbmAula","esNueva","index","findIndex","a","$set","$nextTick","cancelarAbmAula","manejarError","mensaje","texto","mounted"],"sources":["src/components/ListadoAula.vue"],"sourcesContent":["<template>\n  <div class=\"aula-container\">\n    <div class=\"button-container\">\n      <v-btn\n        color=\"primary\"\n        @click=\"abrirAbmAula\"\n        class=\"custom-button mr-4\"\n      >\n        <v-icon left>mdi-school</v-icon>\n        Agregar Aula\n      </v-btn>\n      <v-btn\n        color=\"secondary\"\n        @click=\"navigateToHome\"\n        class=\"custom-button\"\n      >\n        <v-icon left>mdi-home</v-icon>\n        Volver al Inicio\n      </v-btn>\n    </div>\n\n    <v-data-table\n      :headers=\"headers\"\n      :items=\"listadoAula\"\n      height=\"500\"\n      item-value=\"name\"\n    >\n      <template v-slot:item.actions=\"{ item }\">\n        <v-icon @click=\"editarAula(item)\" class=\"mr-2\">mdi-pencil</v-icon>\n        <v-icon @click=\"confirmarEliminarAula(item)\" class=\"ml-2\">mdi-delete</v-icon>\n      </template>\n    </v-data-table>\n\n    <v-dialog v-model=\"mostrarAbmAula\" max-width=\"500px\" persistent>\n      <AbmAula\n        :aula=\"aulaSeleccionada\"\n        :editar=\"editar\"\n        @guardar=\"guardarAbmAula\"\n        @cancelar=\"cancelarAbmAula\"\n        @error=\"manejarError\"\n      />\n    </v-dialog>\n\n    <v-dialog v-model=\"mostrarConfirmacion\" max-width=\"500px\">\n      <v-card>\n        <v-card-title class=\"headline\">Confirmar Eliminación</v-card-title>\n        <v-card-text>¿Está seguro de que desea eliminar el aula?</v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"green darken-1\" text @click=\"mostrarConfirmacion = false\">Cancelar</v-btn>\n          <v-btn color=\"red darken-1\" text @click=\"eliminarAulaConfirmada\">Eliminar</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-snackbar v-model=\"snackbar.show\" :color=\"snackbar.color\" :timeout=\"3000\">\n      {{ snackbar.text }}\n      <template v-slot:action=\"{ attrs }\">\n        <v-btn text v-bind=\"attrs\" @click=\"snackbar.show = false\">\n          Cerrar\n        </v-btn>\n      </template>\n    </v-snackbar>\n  </div>\n</template>\n\n<script>\nimport custom_axios from '../plugins/axios.js';  \nimport AbmAula from './AbmAula.vue';\n\nexport default {\n  components: {\n    AbmAula,\n  },\n  data() {\n    return {\n      headers: [\n        { text: 'Id', value: 'id' },\n        { text: 'Descripcion', value: 'descripcion' },\n        { text: 'Ubicacion', value: 'ubicacion' },\n        { text: 'Cant_proyectores', value: 'cant_proyector' },\n        { text: 'Es_climatizada', value: 'es_climatizada' },\n        { text: 'Aforo', value: 'aforo' },\n        { text: 'Acciones', value: 'actions', sortable: false },\n      ],\n      listadoAula: [],\n      mostrarAbmAula: false,\n      mostrarConfirmacion: false,\n      aulaSeleccionada: {},\n      aulaAEliminar: null,\n      editar: false,\n      snackbar: {\n        show: false,\n        text: '',\n        color: 'info'\n      },\n    };\n  },\n  methods: {\n    todasLasAula() {\n      custom_axios\n        .get('/apiv1/aula')\n        .then(response => {\n          if (response.status === 200) {\n            this.listadoAula = response.data.map(aula => ({\n              ...aula,\n              es_climatizada: aula.es_climatizada ? 'Sí' : 'No'\n            }));\n          }\n        })\n        .catch(error => {\n          console.error('Error al obtener las aulas:', error);\n          this.mostrarSnackbar('Error al cargar las aulas', 'error');\n        });\n    },\n    abrirAbmAula() {\n      this.aulaSeleccionada = {};\n      this.editar = false;\n      this.mostrarAbmAula = true;\n    },\n    navigateToHome() {\n      this.$router.push('/').catch(err => {\n        if (err.name !== 'NavigationDuplicated') {\n          console.error(err);\n        }\n      });\n    },\n    editarAula(item) {\n      this.aulaSeleccionada = { ...item };\n      this.editar = true;\n      this.mostrarAbmAula = true;\n    },\n    confirmarEliminarAula(item) {\n      this.aulaAEliminar = item;\n      this.mostrarConfirmacion = true;\n    },\n    eliminarAulaConfirmada() {\n      custom_axios\n        .delete(`/apiv1/aula/${this.aulaAEliminar.id}`)\n        .then(response => {\n          if (response.status === 204) {\n            this.mostrarSnackbar('Aula eliminada con éxito', 'success');\n            this.todasLasAula();\n            this.mostrarConfirmacion = false;\n          }\n        })\n        .catch(error => {\n          console.error('Error al eliminar el aula:', error);\n          this.mostrarSnackbar('Error al eliminar el aula', 'error');\n        });\n    },\n    guardarAbmAula({ aula, esNueva }) {\n      this.mostrarAbmAula = false;\n      if (esNueva) {\n        this.listadoAula.push(aula);\n        this.mostrarSnackbar('Aula creada con éxito', 'success');\n      } else {\n        const index = this.listadoAula.findIndex(a => a.id === aula.id);\n        if (index !== -1) {\n          this.$set(this.listadoAula, index, aula);\n        }\n        this.mostrarSnackbar('Aula actualizada con éxito', 'success');\n      }\n      this.$nextTick(() => {\n        this.todasLasAula();\n      });\n    },\n    cancelarAbmAula() {\n      this.mostrarAbmAula = false;\n      this.aulaSeleccionada = {};\n      this.editar = false;\n    },\n    manejarError(mensaje) {\n      console.error(mensaje);\n      this.mostrarSnackbar(mensaje, 'error');\n    },\n    mostrarSnackbar(texto, color = 'info') {\n      this.snackbar.text = texto;\n      this.snackbar.color = color;\n      this.snackbar.show = true;\n    },\n  },\n  mounted() {\n    this.todasLasAula();\n  },\n};\n</script>\n\n<style scoped>\n.aula-container {\n  padding: 20px;\n}\n.button-container {\n  display: flex;\n  justify-content: flex-start;\n  margin-bottom: 20px;\n}\n.custom-button {\n  height: 48px !important;\n}\n.mr-2 {\n  margin-right: 8px;\n}\n.ml-2 {\n  margin-left: 8px;\n}\n.mr-4 {\n  margin-right: 16px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}