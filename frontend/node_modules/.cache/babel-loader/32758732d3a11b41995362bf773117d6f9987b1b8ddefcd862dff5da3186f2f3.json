{"ast":null,"code":"export default {\n  name: \"AulasLogin\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      error: null // Para manejar errores\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        // Aquí se puede agregar la lógica de autenticación\n        const response = await this.authenticate(this.username, this.password);\n        if (response && response.status === 200) {\n          this.$emit(\"login\"); // Emite un evento cuando el usuario inicia sesión\n        } else {\n          this.error = \"Error en el inicio de sesión\"; // Mensaje de error genérico\n        }\n      } catch (err) {\n        this.error = \"Error en el inicio de sesión\"; // Manejo de errores\n        console.error(\"Error:\", err);\n      }\n    },\n    authenticate(username, password) {\n      // Simula una solicitud de autenticación\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          if (username === \"user\" && password === \"pass\") {\n            resolve({\n              status: 200\n            });\n          } else {\n            resolve({\n              status: 401\n            });\n          }\n        }, 1000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","error","methods","login","response","authenticate","status","$emit","err","console","Promise","resolve","reject","setTimeout"],"sources":["src/components/AulasLogin.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Login</h1>\n      <form @submit.prevent=\"login\">\n        <input type=\"text\" v-model=\"username\" placeholder=\"Username\" required />\n        <input type=\"password\" v-model=\"password\" placeholder=\"Password\" required />\n        <button type=\"submit\">Login</button>\n      </form>\n      <div v-if=\"error\">{{ error }}</div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: \"AulasLogin\",\n  \n    data() {\n      return {\n        username: \"\",\n        password: \"\",\n        error: null, // Para manejar errores\n      };\n    },\n  \n    methods: {\n      async login() {\n        try {\n          // Aquí se puede agregar la lógica de autenticación\n          const response = await this.authenticate(this.username, this.password);\n          \n          if (response && response.status === 200) {\n            this.$emit(\"login\"); // Emite un evento cuando el usuario inicia sesión\n          } else {\n            this.error = \"Error en el inicio de sesión\"; // Mensaje de error genérico\n          }\n        } catch (err) {\n          this.error = \"Error en el inicio de sesión\"; // Manejo de errores\n          console.error(\"Error:\", err);\n        }\n      },\n  \n      authenticate(username, password) {\n        // Simula una solicitud de autenticación\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            if (username === \"user\" && password === \"pass\") {\n              resolve({ status: 200 });\n            } else {\n              resolve({ status: 401 });\n            }\n          }, 1000);\n        });\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AAaA;EACAA,IAAA;EAEAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EAEAC,OAAA;IACA,MAAAC,MAAA;MACA;QACA;QACA,MAAAC,QAAA,cAAAC,YAAA,MAAAN,QAAA,OAAAC,QAAA;QAEA,IAAAI,QAAA,IAAAA,QAAA,CAAAE,MAAA;UACA,KAAAC,KAAA;QACA;UACA,KAAAN,KAAA;QACA;MACA,SAAAO,GAAA;QACA,KAAAP,KAAA;QACAQ,OAAA,CAAAR,KAAA,WAAAO,GAAA;MACA;IACA;IAEAH,aAAAN,QAAA,EAAAC,QAAA;MACA;MACA,WAAAU,OAAA,EAAAC,OAAA,EAAAC,MAAA;QACAC,UAAA;UACA,IAAAd,QAAA,eAAAC,QAAA;YACAW,OAAA;cAAAL,MAAA;YAAA;UACA;YACAK,OAAA;cAAAL,MAAA;YAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}